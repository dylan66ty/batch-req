{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["\n\ninterface Options {\n  name: string\n  limit: number\n  delay: number\n  parallel: number\n  request: (chunks: any[]) => Promise<any>\n  subscribe: (ret: any[]) => void\n}\n\ninterface Snapshot {\n  id: string,\n  chunks: any[]\n}\n\ninterface BatchReqMethods {\n  add(chunk: any): void\n  scheduler(promiser: () => Promise<any>): void\n  slice(): void\n}\n\nconst hashSum = (text: string) => {\n  let hash = 0\n  if (text.length === 0) {\n    return hash.toString()\n  }\n  for (let i = 0; i < text.length; i++) {\n    const char = text.charCodeAt(i)\n    hash = (hash << 5) - hash + char\n    hash = hash & hash\n  }\n  return hash.toString()\n}\n\n\n\nexport class BatchReq implements BatchReqMethods {\n  public name: string\n  private _queue: (() => void)[]\n  private _chunks: any[]\n  private _options: Options\n  private _timer: NodeJS.Timeout\n  private _counter: number\n  private _snapshots: Snapshot[]\n  constructor(options: Partial<Options>) {\n    this._queue = []\n    this._chunks = []\n    this._counter = 0\n    this._options = Object.assign<Options, {}>({\n      limit: 50,\n      delay: 100,\n      parallel: 3,\n      request: async () => { },\n      subscribe: () => { },\n      name: 'ty'\n    }, options)\n    this.name = this._options.name\n    this.initSnapshots()\n\n  }\n  private getKey () {\n    return `batch-req_${this.name}`\n  }\n  private initSnapshots() {\n    const snapshots = JSON.parse(localStorage.getItem(this.getKey()) ?? '[]')\n    this._snapshots = snapshots\n    this._snapshots.forEach(snapshot => {\n      this.scheduler(this.resolveSnapshot(snapshot))\n    })\n  }\n  private saveSnapshots () {\n    localStorage.setItem(this.getKey(), JSON.stringify(this._snapshots))\n  }\n  public add(chunk) {\n    this._chunks.push(chunk)\n    if (this._timer) {\n      clearTimeout(this._timer)\n    }\n    if (this._chunks.length >= this._options.limit) {\n      this.slice()\n      return\n    }\n    this._timer = setTimeout(() => {\n      this.slice()\n    }, this._options.delay);\n  }\n  public scheduler(promiser) {\n    const Wrap = () => {\n      const { subscribe } = this._options\n      this._counter++\n      promiser()\n        .then((res) => {\n          const { error, data, snapshotId } = res\n          if (error) {\n            subscribe([error, null])\n          } else {\n            subscribe([null, data])\n          }\n          const idx = this._snapshots.findIndex(s => s.id === snapshotId)\n          if(idx > -1) {\n            this._snapshots.splice(idx, 1)\n            this.saveSnapshots()\n          }\n        })\n        .finally(() => {\n          this._counter--\n          if (this._queue.length) {\n            this._queue.shift()()\n          }\n        })\n    }\n    if (this._counter >= this._options.parallel) {\n      this._queue.push(Wrap)\n    } else {\n      Wrap()\n    }\n  }\n  private generateSnapshot(chunks) {\n    const id = hashSum(JSON.stringify(chunks))\n    const exist = this._snapshots.find(s => s.id === id)\n    if(exist) return\n    const item = {\n      id,\n      chunks,\n    }\n    this._snapshots.push(item)\n    this.saveSnapshots()\n    return item\n  }\n  private resolveSnapshot(snapshot: Snapshot) {\n    const { request } = this._options\n    return () => request(snapshot.chunks).then(res => {\n      return {\n        data: res,\n        snapshotId: snapshot.id\n      }\n    }).catch((error) => {\n      return {\n        error,\n        snapshotId: snapshot.id\n      }\n    })\n  }\n  public slice() {\n    const { limit } = this._options\n    const chunks = this._chunks.slice(0, limit)\n    if (chunks.length) {\n      const snapshot = this.generateSnapshot(chunks)\n      if (snapshot) {\n        this.scheduler(this.resolveSnapshot(snapshot))\n      }\n      this._chunks = this._chunks.slice(limit)\n      this.slice()\n    }\n  }\n}\n\n"],
  "mappings": "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",
  "names": []
}
